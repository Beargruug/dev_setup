#!/usr/bin/env bash
set -e

# Check if --awesome switch is supplied, if so use "all" tags
if [ "${1}" == "--awesome" ]; then
  tags="all"
elif [ "${1}" == "--homebrew" ]; then
  tags="homebrew"
elif [ "${1}" == "--caskbrew" ]; then
  tags="caskbrew"
elif [ "${1}" == "--docker" ]; then
  tags="docker"
elif [ "${1}" == "--git" ]; then
  tags="git"
elif [ "${1}" == "--macdock" ]; then
  tags="macdock"
elif [ "${1}" == "--macos" ]; then
  tags="macos"
elif [ "${1}" == "--mas" ]; then
  tags="mas"
elif [ "${1}" == "--ssh" ]; then
  tags="ssh"
elif [ "${1}" == "--zsh" ]; then
  tags="zsh"
elif [ "${1}" == "--dotfiles" ]; then
  tags="dotfiles"
# else
#   # Otherwise, use value from 1st argument, defaulting to "dotfiles"
#   tags="${1:-dotfiles}"
fi

# Check if "ansible" binary is available in $PATH
if ! [ -x "$(command -v ansible)" ]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  brew install ansible
fi

# Get full directory path of this wrapper
SCRIPTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
# Install Ansible requirements like roles and collections
ANSIBLE_CONFIG=${SCRIPTPATH}/ansible.cfg ansible-galaxy install -r ${SCRIPTPATH}/requirements.yml &>/dev/null
# Execute the Ansible playbook
ANSIBLE_CONFIG=${SCRIPTPATH}/ansible.cfg ansible-playbook ${SCRIPTPATH}/setup.yml --ask-become-pass --tags "${tags}"

# Send notification in case "terminal-notifier" is installed
if command -v terminal-notifier 1>/dev/null 2>&1; then
  terminal-notifier -title "setup: Bootstrap complete" -message "Successfully set up environment."
fi
